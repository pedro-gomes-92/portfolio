{"version":3,"sources":["components/Project/Details/Category/index.tsx","components/Project/Details/Technology/index.tsx","components/Project/Details/index.tsx"],"names":["Component","name","className","classnames","text","image","url","alignText","source","to","isNewTab","size","title","description","categories","technologies","onClose","sourceCode","data","actions","gap","isMobileActive","map","category","key","Category","paragraph","index","isWrapping","technology","Technology"],"mappings":"yJAceA,EAJc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC9B,OAAO,kBAAC,MAAD,CAAKC,UAAWC,IAAW,cAAD,aAAsBF,IAASG,KAAMH,KCazDD,EAbc,SAAC,GAA0B,IAAxBK,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,IAAKL,EAAW,EAAXA,KAC1C,OACE,kBAAC,cAAD,CAAaC,UAAWC,IAAW,gBAAD,aAAwBF,KACxD,kBAAC,YAAD,CAAWM,UAAU,UACnB,kBAAC,YAAD,CAAWC,OAAQH,EAAOI,GAAIH,EAAKI,UAAQ,EAACC,KAAK,WAEnD,kBAAC,YAAD,CAAWJ,UAAU,UACnB,kBAAC,OAAD,CAAMH,KAAMH,EAAMU,KAAK,aC6ChBX,UA5Cc,SAAC,GAAiF,IAA/EY,EAA8E,EAA9EA,MAAOC,EAAuE,EAAvEA,YAAaC,EAA0D,EAA1DA,WAAYC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,KACjG,OACE,kBAAC,QAAD,CACEN,MAAOA,EACPV,UAAU,mBACVc,QAASA,EACTG,QAAS,kBAAC,OAAD,CAAMf,KAAK,aAAaK,GAAIQ,EAAYP,UAAQ,KAEzD,kBAAC,cAAD,CAAaU,IAAK,GAChB,kBAAC,YAAD,KACE,kBAAC,eAAD,CAAcC,gBAAc,EAACD,IAAK,GAC/BN,EAAWQ,KAAI,SAAAC,GAAQ,OACtB,kBAAC,aAAD,CAAYZ,KAAK,OAAOa,IAAG,uBAAkBD,IAC3C,kBAACE,EAAD,CAAUxB,KAAMsB,UAKxB,kBAAC,YAAD,KACE,kBAAC,QAAD,CAAOnB,KAAK,cAAcO,KAAM,IAC/BE,EAAYS,KAAI,SAACI,EAAWC,GAAZ,OACf,kBAAC,YAAD,CAAWH,IAAG,0BAAqBG,GAASvB,KAAMsB,QAGtD,kBAAC,YAAD,KACE,kBAAC,QAAD,CAAOtB,KAAK,eAAeO,KAAM,IAChCO,GACC,kBAAC,eAAD,CAAcG,gBAAc,EAACO,YAAU,EAACR,IAAK,GAC1CL,EAAaO,KAAI,SAAAO,GAAe,IAAD,EACPX,EAAKW,GAApBvB,EADsB,EACtBA,IAAKD,EADiB,EACjBA,MACb,OACE,kBAAC,aAAD,CAAYM,KAAK,OAAOa,IAAG,yBAAoBK,IAC7C,kBAACC,EAAD,CAAY7B,KAAM4B,EAAYvB,IAAKA,EAAKD,MAAOA","file":"static/js/4.4f517c51.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport classnames from 'classnames';\nimport { Tag } from 'dots';\n\nimport { Name } from './types';\n\ninterface Props {\n  name: Name;\n}\n\nconst Component: FC<Props> = ({ name }) => {\n  return <Tag className={classnames('is-category', `is-${name}`)} text={name} />;\n};\n\nexport default Component;\n","import React, { FC } from 'react';\nimport classnames from 'classnames';\nimport { StackLayout, StackItem, ImageLink, Text } from 'dots';\nimport { Name } from './types';\n\ninterface Props {\n  name: Name;\n  image: string;\n  url: string;\n}\n\nconst Component: FC<Props> = ({ image, url, name }) => {\n  return (\n    <StackLayout className={classnames('is-technology', `is-${name}`)}>\n      <StackItem alignText=\"center\">\n        <ImageLink source={image} to={url} isNewTab size=\"small\" />\n      </StackItem>\n      <StackItem alignText=\"center\">\n        <Text text={name} size=\"small\" />\n      </StackItem>\n    </StackLayout>\n  );\n};\n\nexport default Component;\n","import React, { FC } from 'react';\nimport { Modal, StackLayout, StackItem, Title, Paragraph, Link, ColumnLayout, ColumnItem } from 'dots';\n\nimport { Name as TechnologyName, Configs as TechnologyConfigs } from 'components/Project/Details/Technology/types';\nimport { Name as CategoryName } from 'components/Project/Details/Category/types';\n\nimport Category from './Category';\nimport Technology from './Technology';\n\nexport interface Props {\n  title: string;\n  categories: CategoryName[];\n  description: string[];\n  technologies: TechnologyName[];\n  sourceCode: string;\n  onClose: (event: React.MouseEvent) => void;\n  data?: TechnologyConfigs;\n}\n\nconst Component: FC<Props> = ({ title, description, categories, technologies, onClose, sourceCode, data }) => {\n  return (\n    <Modal\n      title={title}\n      className=\"is-project-modal\"\n      onClose={onClose}\n      actions={<Link text=\"Learn more\" to={sourceCode} isNewTab />}\n    >\n      <StackLayout gap={2}>\n        <StackItem>\n          <ColumnLayout isMobileActive gap={1}>\n            {categories.map(category => (\n              <ColumnItem size=\"auto\" key={`key-category-${category}`}>\n                <Category name={category} />\n              </ColumnItem>\n            ))}\n          </ColumnLayout>\n        </StackItem>\n        <StackItem>\n          <Title text=\"Description\" size={5} />\n          {description.map((paragraph, index) => (\n            <Paragraph key={`key-description-${index}`} text={paragraph} />\n          ))}\n        </StackItem>\n        <StackItem>\n          <Title text=\"Technologies\" size={5} />\n          {data && (\n            <ColumnLayout isMobileActive isWrapping gap={1}>\n              {technologies.map(technology => {\n                const { url, image } = data[technology];\n                return (\n                  <ColumnItem size=\"auto\" key={`key-technology-${technology}`}>\n                    <Technology name={technology} url={url} image={image} />\n                  </ColumnItem>\n                );\n              })}\n            </ColumnLayout>\n          )}\n        </StackItem>\n      </StackLayout>\n    </Modal>\n  );\n};\n\nexport default Component;\n"],"sourceRoot":""}