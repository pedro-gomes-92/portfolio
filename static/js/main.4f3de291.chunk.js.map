{"version":3,"sources":["utils.ts","components/Loader/index.tsx","sections/About/assets/profile.jpeg","components/Hero/assets/home.jpg","components/Project/assets/dots.jpg","components/Project/assets/scripter.jpg","components/Project/assets/coming-soon.jpg","components/App/Loader/assets/loader.svg","components/App/Loader/index.tsx","components/App/Loadable/index.tsx","components/App/Loadable/constants.ts","serviceWorker.ts","index.tsx"],"names":["loadImage","path","Promise","resolve","img","document","createElement","src","addEventListener","getImageData","window","fetch","then","response","blob","reader","FileReader","result","readAsDataURL","scrollTo","element","offset","top","innerHeight","offsetTop","behavior","Component","className","pastDelay","isLoading","hasOverlay","loader","loaderComponent","classnames","module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","id","x","y","width","height","filterUnits","input","stdDeviation","floodOpacity","operator","in2","in","_ref3","clipPath","fill","stroke","strokeWidth","rx","transform","filter","fontSize","fontFamily","fontWeight","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","rest","Loader","Loadable","Map","_imgHome","imgHome","_imgProfile","imgProfile","_imgDots","imgDots","_imgScripter","imgScripter","_imgComingSoon","imgComingSoon","_sleep","setTimeout","loading","render","default","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f3de291.chunk.js","sourcesContent":["export const loadImage = (path: string): Promise<HTMLImageElement> =>\n  new Promise(resolve => {\n    const img = document.createElement('img');\n\n    img.src = path;\n    img.addEventListener('load', () => {\n      resolve(img);\n    });\n  });\n\nexport const getImageData = (path: string): Promise<string> =>\n  new Promise(resolve => {\n    window\n      .fetch(path)\n      .then(response => response.blob())\n      .then(blob => {\n        const reader = new FileReader();\n\n        reader.addEventListener(\n          'load',\n          () => {\n            resolve(reader.result as string);\n          },\n          false,\n        );\n\n        reader.readAsDataURL(blob);\n      });\n  });\n\nexport const scrollTo = (element: HTMLElement, offset: number = 0) => {\n  const top = window.innerHeight + element.offsetTop;\n  window.scrollTo({\n    top: top + offset,\n    behavior: 'smooth',\n  });\n};\n","import React, { FC } from 'react';\nimport classnames from 'classnames';\nimport { LoadingComponentProps } from 'react-loadable';\nimport { AreaLoader, AreaLoaderProps } from 'dots.js';\n\ninterface Props extends LoadingComponentProps {\n  className?: AreaLoaderProps['className'];\n  hasOverlay?: AreaLoaderProps['hasOverlay'];\n  loader?: AreaLoaderProps['loader'];\n}\n\nconst Component: FC<Props> = ({ className, pastDelay, isLoading, hasOverlay, loader }) => {\n  let loaderComponent = null;\n\n  if (isLoading || pastDelay) {\n    loaderComponent = (\n      <AreaLoader className={classnames('is-loading', className)} hasOverlay={hasOverlay} loader={loader} />\n    );\n  }\n\n  return loaderComponent;\n};\n\nexport default Component;\n","module.exports = __webpack_public_path__ + \"static/media/profile.5c3bc101.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/home.19cb2432.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dots.262edb28.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scripter.4983ce2b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coming-soon.798426c8.jpg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null, React.createElement(\"filter\", {\n  id: \"PG\",\n  x: 32,\n  y: 46,\n  width: 96,\n  height: 69,\n  filterUnits: \"userSpaceOnUse\"\n}, React.createElement(\"feOffset\", {\n  input: \"SourceAlpha\"\n}), React.createElement(\"feGaussianBlur\", {\n  stdDeviation: 1,\n  result: \"blur\"\n}), React.createElement(\"feFlood\", {\n  floodOpacity: 0.161\n}), React.createElement(\"feComposite\", {\n  operator: \"in\",\n  in2: \"blur\"\n}), React.createElement(\"feComposite\", {\n  in: \"SourceGraphic\"\n})), React.createElement(\"clipPath\", {\n  id: \"clip-Logo\"\n}, React.createElement(\"rect\", {\n  width: 160,\n  height: 160\n})));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"Logo\",\n  clipPath: \"url(#clip-Logo)\"\n}, React.createElement(\"rect\", {\n  width: 160,\n  height: 160,\n  fill: \"rgba(255,255,255,0)\"\n}), React.createElement(\"g\", {\n  id: \"Rectangle_1\",\n  \"data-name\": \"Rectangle 1\",\n  fill: \"#272727\",\n  stroke: \"#ff652f\",\n  strokeWidth: 6\n}, React.createElement(\"rect\", {\n  width: 160,\n  height: 160,\n  rx: 37,\n  stroke: \"none\"\n}), React.createElement(\"rect\", {\n  x: 3,\n  y: 3,\n  width: 154,\n  height: 154,\n  rx: 34,\n  fill: \"none\"\n})), React.createElement(\"g\", {\n  transform: \"matrix(1, 0, 0, 1, 0, 0)\",\n  filter: \"url(#PG)\"\n}, React.createElement(\"text\", {\n  id: \"PG-2\",\n  \"data-name\": \"PG\",\n  transform: \"translate(35 104)\",\n  fill: \"#ff652f\",\n  fontSize: 63,\n  fontFamily: \"TsukuARdGothic-Bold, Tsukushi A Round Gothic\",\n  fontWeight: 700\n}, React.createElement(\"tspan\", {\n  x: 0,\n  y: 0\n}, \"PG\"))));\n\nvar SvgLoader = function SvgLoader(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 160,\n    height: 160,\n    viewBox: \"0 0 160 160\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLoader, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/loader.cf30876c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FC } from 'react';\nimport { LoadingComponentProps } from 'react-loadable';\n\nimport Loader from 'components/Loader';\nimport { ReactComponent as LoaderSVG } from './assets/loader.svg';\n\nconst Component: FC<LoadingComponentProps> = ({ isLoading, ...rest }) => {\n  return <Loader className=\"is-application\" loader={<LoaderSVG />} isLoading={isLoading} {...rest} />;\n};\n\nexport default Component;\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport Loader from 'components/App/Loader';\n\nimport imgHome from 'components/Hero/assets/home.jpg';\nimport imgProfile from 'sections/About/assets/profile.jpeg';\nimport imgDots from 'components/Project/assets/dots.jpg';\nimport imgScripter from 'components/Project/assets/scripter.jpg';\nimport imgComingSoon from 'components/Project/assets/coming-soon.jpg';\nimport { loadImage } from 'utils';\nimport { LOADING_DELAY } from './constants';\n\nconst Component = Loadable.Map<{}, any>({\n  loader: {\n    Component: () => import('components/App'),\n    _imgHome: () => loadImage(imgHome),\n    _imgProfile: () => loadImage(imgProfile),\n    _imgDots: () => loadImage(imgDots),\n    _imgScripter: () => loadImage(imgScripter),\n    _imgComingSoon: () => loadImage(imgComingSoon),\n    _sleep: () =>\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n        }, LOADING_DELAY);\n      }),\n  },\n  loading: Loader,\n  render: ({ Component: LoadedComponent }, props) => {\n    const Component = LoadedComponent.default;\n    return <Component {...props} />;\n  },\n});\n\nexport default Component;\n","export const LOADING_DELAY = 2500;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from 'components/App/Loadable';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}