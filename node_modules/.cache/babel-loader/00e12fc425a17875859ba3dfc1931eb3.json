{"ast":null,"code":"import React from'react';import{Section}from'dots';var Component=function Component(_ref){var name=_ref.name,children=_ref.children,reference=_ref.reference;return React.createElement(Section,{attribute:{id:name},className:\"is-\".concat(name),reference:reference},children);};export default Component;","map":{"version":3,"sources":["/Users/petrogomes/projects/personal/portfolio/src/components/Section/index.tsx"],"names":["React","Section","Component","name","children","reference","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAqC,OAArC,CACA,OAASC,OAAT,KAAwB,MAAxB,CAQA,GAAMC,CAAAA,SAAoB,CAAG,QAAvBA,CAAAA,SAAuB,MAAmC,IAAhCC,CAAAA,IAAgC,MAAhCA,IAAgC,CAA1BC,QAA0B,MAA1BA,QAA0B,CAAhBC,SAAgB,MAAhBA,SAAgB,CAC9D,MACE,qBAAC,OAAD,EAAS,SAAS,CAAE,CAAEC,EAAE,CAAEH,IAAN,CAApB,CAAkC,SAAS,cAAQA,IAAR,CAA3C,CAA2D,SAAS,CAAEE,SAAtE,EACGD,QADH,CADF,CAKD,CAND,CAQA,cAAeF,CAAAA,SAAf","sourcesContent":["import React, { FC, ReactNode } from 'react';\nimport { Section } from 'dots';\n\nexport interface Props {\n  name: string;\n  children: ReactNode;\n  reference: (element: HTMLElement) => void;\n}\n\nconst Component: FC<Props> = ({ name, children, reference }) => {\n  return (\n    <Section attribute={{ id: name }} className={`is-${name}`} reference={reference}>\n      {children}\n    </Section>\n  );\n};\n\nexport default Component;\n"]},"metadata":{},"sourceType":"module"}