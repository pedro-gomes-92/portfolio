{"ast":null,"code":"import React from'react';import{Modal,StackLayout,StackItem,Title,Paragraph,Link,ColumnLayout,ColumnItem}from'dots';import Category from'./Category';import Technology from'./Technology';var Component=function Component(_ref){var title=_ref.title,description=_ref.description,categories=_ref.categories,technologies=_ref.technologies,onClose=_ref.onClose,sourceCode=_ref.sourceCode,data=_ref.data;return React.createElement(Modal,{title:title,className:\"is-project-modal\",onClose:onClose,actions:React.createElement(Link,{text:\"Learn more\",to:sourceCode,isNewTab:true})},React.createElement(StackLayout,{gap:2},React.createElement(StackItem,null,React.createElement(ColumnLayout,{isMobileActive:true,gap:1},categories.map(function(category){return React.createElement(ColumnItem,{size:\"auto\",key:\"key-category-\".concat(category)},React.createElement(Category,{name:category}));}))),React.createElement(StackItem,null,React.createElement(Title,{text:\"Description\",size:5}),description.map(function(paragraph,index){return React.createElement(Paragraph,{key:\"key-description-\".concat(index),text:paragraph});})),React.createElement(StackItem,null,React.createElement(Title,{text:\"Technologies\",size:5}),data&&React.createElement(ColumnLayout,{isMobileActive:true,isWrapping:true,gap:1},technologies.map(function(technology){var _data$technology=data[technology],url=_data$technology.url,image=_data$technology.image;return React.createElement(ColumnItem,{size:\"auto\",key:\"key-technology-\".concat(technology)},React.createElement(Technology,{name:technology,url:url,image:image}));})))));};export default Component;","map":{"version":3,"sources":["/Users/petrogomes/projects/personal/portfolio/src/components/Project/Details/index.tsx"],"names":["React","Modal","StackLayout","StackItem","Title","Paragraph","Link","ColumnLayout","ColumnItem","Category","Technology","Component","title","description","categories","technologies","onClose","sourceCode","data","map","category","paragraph","index","technology","url","image"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAA0B,OAA1B,CACA,OAASC,KAAT,CAAgBC,WAAhB,CAA6BC,SAA7B,CAAwCC,KAAxC,CAA+CC,SAA/C,CAA0DC,IAA1D,CAAgEC,YAAhE,CAA8EC,UAA9E,KAAgG,MAAhG,CAKA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAYA,GAAMC,CAAAA,SAAoB,CAAG,QAAvBA,CAAAA,SAAuB,MAAiF,IAA9EC,CAAAA,KAA8E,MAA9EA,KAA8E,CAAvEC,WAAuE,MAAvEA,WAAuE,CAA1DC,UAA0D,MAA1DA,UAA0D,CAA9CC,YAA8C,MAA9CA,YAA8C,CAAhCC,OAAgC,MAAhCA,OAAgC,CAAvBC,UAAuB,MAAvBA,UAAuB,CAAXC,IAAW,MAAXA,IAAW,CAC5G,MACE,qBAAC,KAAD,EACE,KAAK,CAAEN,KADT,CAEE,SAAS,CAAC,kBAFZ,CAGE,OAAO,CAAEI,OAHX,CAIE,OAAO,CAAE,oBAAC,IAAD,EAAM,IAAI,CAAC,YAAX,CAAwB,EAAE,CAAEC,UAA5B,CAAwC,QAAQ,KAAhD,EAJX,EAME,oBAAC,WAAD,EAAa,GAAG,CAAE,CAAlB,EACE,oBAAC,SAAD,MACE,oBAAC,YAAD,EAAc,cAAc,KAA5B,CAA6B,GAAG,CAAE,CAAlC,EACGH,UAAU,CAACK,GAAX,CAAe,SAAAC,QAAQ,QACtB,qBAAC,UAAD,EAAY,IAAI,CAAC,MAAjB,CAAwB,GAAG,wBAAkBA,QAAlB,CAA3B,EACE,oBAAC,QAAD,EAAU,IAAI,CAAEA,QAAhB,EADF,CADsB,EAAvB,CADH,CADF,CADF,CAUE,oBAAC,SAAD,MACE,oBAAC,KAAD,EAAO,IAAI,CAAC,aAAZ,CAA0B,IAAI,CAAE,CAAhC,EADF,CAEGP,WAAW,CAACM,GAAZ,CAAgB,SAACE,SAAD,CAAYC,KAAZ,QACf,qBAAC,SAAD,EAAW,GAAG,2BAAqBA,KAArB,CAAd,CAA4C,IAAI,CAAED,SAAlD,EADe,EAAhB,CAFH,CAVF,CAgBE,oBAAC,SAAD,MACE,oBAAC,KAAD,EAAO,IAAI,CAAC,cAAZ,CAA2B,IAAI,CAAE,CAAjC,EADF,CAEGH,IAAI,EACH,oBAAC,YAAD,EAAc,cAAc,KAA5B,CAA6B,UAAU,KAAvC,CAAwC,GAAG,CAAE,CAA7C,EACGH,YAAY,CAACI,GAAb,CAAiB,SAAAI,UAAU,CAAI,sBACPL,IAAI,CAACK,UAAD,CADG,CACtBC,GADsB,kBACtBA,GADsB,CACjBC,KADiB,kBACjBA,KADiB,CAE9B,MACE,qBAAC,UAAD,EAAY,IAAI,CAAC,MAAjB,CAAwB,GAAG,0BAAoBF,UAApB,CAA3B,EACE,oBAAC,UAAD,EAAY,IAAI,CAAEA,UAAlB,CAA8B,GAAG,CAAEC,GAAnC,CAAwC,KAAK,CAAEC,KAA/C,EADF,CADF,CAKD,CAPA,CADH,CAHJ,CAhBF,CANF,CADF,CAyCD,CA1CD,CA4CA,cAAed,CAAAA,SAAf","sourcesContent":["import React, { FC } from 'react';\nimport { Modal, StackLayout, StackItem, Title, Paragraph, Link, ColumnLayout, ColumnItem } from 'dots';\n\nimport { Name as TechnologyName, Configs as TechnologyConfigs } from 'components/Project/Details/Technology/types';\nimport { Name as CategoryName } from 'components/Project/Details/Category/types';\n\nimport Category from './Category';\nimport Technology from './Technology';\n\nexport interface Props {\n  title: string;\n  categories: CategoryName[];\n  description: string[];\n  technologies: TechnologyName[];\n  sourceCode: string;\n  onClose: (event: React.MouseEvent) => void;\n  data?: TechnologyConfigs;\n}\n\nconst Component: FC<Props> = ({ title, description, categories, technologies, onClose, sourceCode, data }) => {\n  return (\n    <Modal\n      title={title}\n      className=\"is-project-modal\"\n      onClose={onClose}\n      actions={<Link text=\"Learn more\" to={sourceCode} isNewTab />}\n    >\n      <StackLayout gap={2}>\n        <StackItem>\n          <ColumnLayout isMobileActive gap={1}>\n            {categories.map(category => (\n              <ColumnItem size=\"auto\" key={`key-category-${category}`}>\n                <Category name={category} />\n              </ColumnItem>\n            ))}\n          </ColumnLayout>\n        </StackItem>\n        <StackItem>\n          <Title text=\"Description\" size={5} />\n          {description.map((paragraph, index) => (\n            <Paragraph key={`key-description-${index}`} text={paragraph} />\n          ))}\n        </StackItem>\n        <StackItem>\n          <Title text=\"Technologies\" size={5} />\n          {data && (\n            <ColumnLayout isMobileActive isWrapping gap={1}>\n              {technologies.map(technology => {\n                const { url, image } = data[technology];\n                return (\n                  <ColumnItem size=\"auto\" key={`key-technology-${technology}`}>\n                    <Technology name={technology} url={url} image={image} />\n                  </ColumnItem>\n                );\n              })}\n            </ColumnLayout>\n          )}\n        </StackItem>\n      </StackLayout>\n    </Modal>\n  );\n};\n\nexport default Component;\n"]},"metadata":{},"sourceType":"module"}